//
// Created by Hjuntao on 2023/7/9.
//

#ifndef CPPGAMEJAM_MENU_H
#define CPPGAMEJAM_MENU_H

#include "raylib-cpp.hpp"

enum GameState{
    START_MENU,
    SCENE_0,
    SCENE_1,
    SCENE_2,
    PAUSE_MENU,
    SETTINGS_MENU,
    GAME_OVER_MENU,
    WIN_MENU
};

class Menu {
private:
    raylib::Image background;
    raylib::Vector2 background_position;

    std::vector<raylib::Image> buttons;
    std::vector<raylib::Texture2D> buttons_texture;
    std::vector<raylib::Vector2> buttons_position;
    std::vector<raylib::Vector2> buttons_size;

    //@TODO: Add mouseover effect for the buttons
    //hint: GetMouseX() and GetMouseY() can be used to get the mouse position

    public:
    Menu();
    void DrawMenu(enum GameState gameState);
    void UnloadMenu();
};

Menu::Menu() {
    background_position = raylib::Vector2(0, 0);
    background = LoadImage("assets/menu/background.png");

    //@TODO: Below is generated by copilot, need to think of a way to construct menu by default
    // or just not enable construction without parameters
    buttons.emplace_back(LoadImage("assets/menu/start_button.png"));
    buttons.emplace_back(LoadImage("assets/menu/exit_button.png"));
    buttons.emplace_back(LoadImage("assets/menu/continue_button.png"));
    buttons.emplace_back(LoadImage("assets/menu/setting_button.png"));
    buttons.emplace_back(LoadImage("assets/menu/return_button.png"));
    buttons.emplace_back(LoadImage("assets/menu/restart_button.png"));

    for (const auto & button : buttons){
        buttons_texture.emplace_back(button.LoadTexture());
        buttons_position.emplace_back(0, 0);
        buttons_size.emplace_back(0, 0);
    }
}

void Menu::DrawMenu(const enum GameState gameState) {
    switch (gameState) {
        //@TODO: complete the design of the menu
    }
}

#endif //CPPGAMEJAM_MENU_H
